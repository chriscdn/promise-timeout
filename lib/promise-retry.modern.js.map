{"version":3,"file":"promise-retry.modern.js","sources":["../src/index.ts"],"sourcesContent":["const promiseTimeout = <T>(\n  promise: Promise<T>,\n  timeout: number,\n  errMsg = \"The promise timed out.\",\n): Promise<T> => {\n  return asyncTimeout(() => promise, timeout, errMsg);\n};\n\nconst asyncTimeout = <T>(\n  asyncFn: () => Promise<T>, // Accepts an async function or a function returning a Promise\n  timeout: number,\n  errMsg = \"The promise timed out.\",\n): Promise<T> => {\n  let timeoutID: ReturnType<typeof setTimeout>;\n\n  const timeOutPromise = new Promise<T>((_, reject) =>\n    timeoutID = setTimeout(() => reject(new Error(errMsg)), timeout)\n  );\n\n  return Promise.race([asyncFn(), timeOutPromise]) // Invoke asyncFn to get the Promise\n    .finally(() => clearTimeout(timeoutID));\n};\n\nexport { asyncTimeout, promiseTimeout };\n"],"names":["promiseTimeout","promise","timeout","errMsg","asyncTimeout","asyncFn","timeoutID","timeOutPromise","Promise","_","reject","setTimeout","Error","race","finally","clearTimeout"],"mappings":"AAAM,MAAAA,EAAiBA,CACrBC,EACAC,EACAC,EAAS,2BAEFC,EAAa,IAAMH,EAASC,EAASC,GAGxCC,EAAeA,CACnBC,EACAH,EACAC,EAAS,4BAET,IAAIG,EAEJ,MAAMC,EAAiB,IAAIC,QAAW,CAACC,EAAGC,IACxCJ,EAAYK,WAAW,IAAMD,EAAO,IAAIE,MAAMT,IAAUD,IAG1D,OAAOM,QAAQK,KAAK,CAACR,IAAWE,IAC7BO,QAAQ,IAAMC,aAAaT,GAAU"}